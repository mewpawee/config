#!/bin/sh
inside_git_repo="$(git rev-parse --is-inside-work-tree 2>/dev/null)"
staged_files=$(git diff --cached --name-only)

if [ "$inside_git_repo" ] && [ "$staged_files" ]; then
  echo "inside git repo"
  TYPE=$(gum choose "fix" "feat" "docs" "style" "refactor" "test" "chore" "revert")
  SCOPE=$(gum input --placeholder "scope")

  # Since the scope is optional, wrap it in parentheses if it has a value.
  test -n "$SCOPE" && SCOPE="($SCOPE)"

  # Pre-populate the input with the type(scope): so that the user may change it
  SUMMARY=$(gum input --value "$TYPE$SCOPE: " --placeholder "Summary of this change")
  DESCRIPTION=$(gum write --placeholder "Details of this change (CTRL+D to finish)")

  # Commit these changes
  gum confirm "Commit changes?" && git commit -m "$SUMMARY" -m "$DESCRIPTION"
else
  echo "not in git repo or no staged files"
fi
